/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cafe.ui.manager;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.parser.Entity;
import poly.cafe.controller.entityController.theDDCTR;
import poly.cafe.dao.entityDAO.theDDDAO;
import poly.cafe.dao.impl.TheDDimpl;
import poly.cafe.entity.ChiTietHoaDon;
import poly.cafe.entity.theDD;
import poly.cafe.util.XAuth;
import poly.cafe.util.XDialog;

/**
 *
 * @author baoha
 */
public class TheDDPanel extends javax.swing.JPanel implements theDDCTR{
    theDDDAO dao = new TheDDimpl();
    List<theDD> items = new ArrayList<>();
    /**
     * Creates new form TheDDPanel
     */
    public TheDDPanel() {
        initComponents();
        fillToTable();
        setQuyen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDD = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnMoveLast = new javax.swing.JButton();
        btnMovePrevious = new javax.swing.JButton();
        btnMoveNext = new javax.swing.JButton();
        btnMoveFirst = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnADD = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtHD = new javax.swing.JTextField();
        rdoUse = new javax.swing.JRadioButton();
        rdoDUSE = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblDD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Trạng thái", "Mã HD"
            }
        ));
        tblDD.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblDDAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblDD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDD);

        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THẺ ĐỊNH DANH");

        btnMoveLast.setText("Cuối");
        btnMoveLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveLastActionPerformed(evt);
            }
        });

        btnMovePrevious.setText("Lùi");
        btnMovePrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovePreviousActionPerformed(evt);
            }
        });

        btnMoveNext.setText("Tiến");
        btnMoveNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveNextActionPerformed(evt);
            }
        });

        btnMoveFirst.setText("Đầu");
        btnMoveFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveFirstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMoveFirst)
                .addGap(18, 18, 18)
                .addComponent(btnMovePrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMoveNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveLast)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMoveNext)
                        .addComponent(btnMoveLast))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMovePrevious)
                        .addComponent(btnMoveFirst)))
                .addContainerGap())
        );

        btnDel.setText("Deleted");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnADD.setText("ADD");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnRead.setText("READ");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jButton5.setText("On");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã HD:");

        jLabel4.setText("Trạng thái:");

        jLabel5.setText("ID:");

        lblID.setText("id");

        buttonGroup1.add(rdoUse);
        rdoUse.setText("Đã sử dụng ");

        buttonGroup1.add(rdoDUSE);
        rdoDUSE.setText("Chưa sử dụng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoUse)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoDUSE))
                            .addComponent(txtHD, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 352, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRead)
                            .addComponent(btnDel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnADD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear)))
                        .addGap(64, 64, 64))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblID)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRead)
                            .addComponent(btnADD)
                            .addComponent(btnClear)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnDel)
                            .addComponent(jButton5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(rdoUse)
                            .addComponent(rdoDUSE))))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMoveLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveLastActionPerformed
        // TODO add your handling code here:
        moveLast();
    }//GEN-LAST:event_btnMoveLastActionPerformed

    private void btnMovePreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovePreviousActionPerformed
        // TODO add your handling code here:
        movePrevious();
    }//GEN-LAST:event_btnMovePreviousActionPerformed

    private void btnMoveNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveNextActionPerformed
        // TODO add your handling code here:
        moveNext();
    }//GEN-LAST:event_btnMoveNextActionPerformed

    private void btnMoveFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveFirstActionPerformed
        // TODO add your handling code here:
        moveFirst();
    }//GEN-LAST:event_btnMoveFirstActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        if(checkAll()==true){
        checkAll();
        delete();
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
        checkAll();
        create();
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        // TODO add your handling code here:
        fillToTable();
        XDialog.alert("Đã load lại dữ liệu");
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(checkAll()==true){
        update();
        checkAll();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
        XDialog.alert("Đã xóa toàn bộ nội dung");
    }//GEN-LAST:event_btnClearActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        on();
        XDialog.alert("Đã mở quyền");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tblDDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDDMouseClicked
        // TODO add your handling code here:
        edit();
    }//GEN-LAST:event_tblDDMouseClicked

    private void tblDDAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblDDAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDDAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnMoveFirst;
    private javax.swing.JButton btnMoveLast;
    private javax.swing.JButton btnMoveNext;
    private javax.swing.JButton btnMovePrevious;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JRadioButton rdoDUSE;
    private javax.swing.JRadioButton rdoUse;
    private javax.swing.JTable tblDD;
    private javax.swing.JTextField txtHD;
    // End of variables declaration//GEN-END:variables
   @Override
    public void open() {
    }

    @Override
    public void setForm(theDD entity) {
        txtHD.setText(entity.getHd());
        lblID.setText(String.valueOf(entity.getID()));
        if (entity.getTrangThai()== null) {
            // Không chọn gì
            rdoUse.setSelected(false);
            rdoDUSE.setSelected(false);
            
        } else {
            switch (entity.getTrangThai()) {
                case "Đã sử dụng":
                    rdoUse.setSelected(true);
                    break;
                case "Chưa sử dụng":
                    rdoDUSE.setSelected(true);
                    break;
                
                default:
                    // Không chọn radio button nào nếu giá trị lạ
                    rdoUse.setSelected(false);
                    rdoDUSE.setSelected(false);
            }
        }
    }
     public void setQuyen() {
    if (XAuth.isViewer()) {
        // Phục vụ không được quyền gì
        btnADD.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        btnRead.setEnabled(true);
    } else if (XAuth.isStaff()) {
        // Nhân viên không được thêm/sửa/xóa nhân viên
        btnADD.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        btnRead.setEnabled(true);
    }else if (XAuth.isManager()) {
        // Nhân viên không được thêm/sửa/xóa nhân viên
        btnADD.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnDel.setEnabled(true);
        btnRead.setEnabled(true);
    }
    // Quản lý thì không cần giới hạn
}
    @Override
    public theDD getForm() {
        theDD entity = new theDD();
        if (rdoUse.isSelected()) {
            entity.setTrangThai("Đã sử dụng");
        } else if (rdoDUSE.isSelected()) {
            entity.setTrangThai("Chưa sử dụng");
        }else{
            entity.setTrangThai(null);  // Không chọn chức vụ
        }
        entity.setHd(txtHD.getText());
        entity.setID(Integer.parseInt(lblID.getText()));
        return entity;
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblDD.getModel();
        model.setRowCount(0);
        items = dao.findAll();
        items.forEach(item -> {
            Object[] rowData = {
                item.getID(),
                item.getTrangThai(),
                item.getHd(),
                false
            };
            model.addRow(rowData);
        });
    }

    @Override
    public void edit() {
        theDD entity = items.get(tblDD.getSelectedRow());
        this.setForm(entity);
        this.setEditable(true);
    }

    @Override
    public void create() {
        if (XDialog.confirm("Bạn thực sự muốn thêm nhân viên này?")) {
        theDD entity = this.getForm();
        dao.create(entity);
        this.fillToTable();
        this.clear();
    }
    }

    @Override
    public void update() {
        if (XDialog.confirm("Bạn thực sự muốn thêm cập nhật viên này?")) {
        theDD entity = this.getForm();
        dao.create(entity);
        this.fillToTable();
        this.clear();
    }
    }

    @Override
    public void delete() {
        if (XDialog.confirm("Bạn thực sự muốn xóa?")) {
        String id = lblID.getText();
        dao.deleteById(id);
        this.fillToTable();
        this.clear();
    }
    }

    @Override
    public void clear() {
        this.setForm(new theDD());
    }

    @Override
    public void setEditable(boolean editable) {
        int rowCount = tblDD.getRowCount();
        int selectedRow = tblDD.getSelectedRow();
        String value = tblDD.getValueAt(selectedRow, 5).toString();
       
        if (value == null) {
            // Không có quyền gì hết
            lblID.setEnabled(false);
            btnADD.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnDel.setEnabled(false);
            btnMoveFirst.setEnabled(false);
            btnMovePrevious.setEnabled(false);
            btnMoveNext.setEnabled(false);
            btnMoveLast.setEnabled(false);
            return;
    }
    }
    private void on() {
        btnADD.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnDel.setEnabled(true);
            btnMoveFirst.setEnabled(true);
            btnMovePrevious.setEnabled(true);
            btnMoveNext.setEnabled(true);
            btnMoveLast.setEnabled(true);
    }

    @Override
    public boolean checkAll() {
    theDD entity = new theDD();
        
    if (!rdoDUSE.isSelected() && !rdoUse.isSelected()) {
        XDialog.alert("Vui lòng chọn chức vụ.");

    }
        


        
    if (txtHD.getText().trim().isEmpty()) {
        XDialog.alert( "Vui lòng nhập trạng thái.");
        
        

    }
    if (txtHD.getText().equals(entity.getTrangThai())) {
        XDialog.alert( "Vui lòng nhập đúng trạng thái.");
        

    }
    
    return false;
    }

    @Override
    public void uncheckAll() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void deleteCheckedItems() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void moveFirst() {
        int currentIndex = tblDD.getSelectedRow();
        if (currentIndex == 0) {
            XDialog.alert( "Đã ở vị trí đầu tiên rồi!");
        } else {
            this.moveTo(0);
        }
    }

    @Override
    public void movePrevious() {
        this.moveTo(tblDD.getSelectedRow() - 1);
    }

    @Override
    public void moveNext() {
    this.moveTo(tblDD.getSelectedRow() + 1);
    }

    @Override
    public void moveLast() {
        this.moveTo(tblDD.getRowCount() - 1);
    }

    @Override
    public void moveTo(int index) {
         if (index < 0) {
        this.moveLast();
    } else if (index >= tblDD.getRowCount()) {
        this.moveFirst();
    } else {
        tblDD.clearSelection();
        tblDD.setRowSelectionInterval(index, index);
        this.edit();
    }
    }
}
