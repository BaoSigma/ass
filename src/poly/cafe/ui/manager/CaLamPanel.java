/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cafe.ui.manager;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import poly.cafe.controller.entityController.CaLamCTR;
import poly.cafe.dao.entityDAO.CaLamDAO;
import poly.cafe.dao.entityDAO.NhanVienDAO;
import poly.cafe.dao.impl.Calamimpl;
import poly.cafe.dao.impl.NhanVienimpl;
import poly.cafe.entity.CaLam;
import poly.cafe.entity.NhanVien;
import poly.cafe.util.XAuth;
import poly.cafe.util.XDialog;

/**
 *
 * @author baoha
 */
public class CaLamPanel extends javax.swing.JPanel implements CaLamCTR{
    CaLamDAO dao = new Calamimpl();
    List<CaLam> items = new ArrayList<>();
    NhanVienDAO nvDao = new NhanVienimpl();
    /**
     * Creates new form CaLamPanel
     */
    public CaLamPanel() {
        initComponents();
        fillToTable();
        setQuyen();
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCaLam = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rdoCa1 = new javax.swing.JRadioButton();
        rdoCa2 = new javax.swing.JRadioButton();
        rdoCa3 = new javax.swing.JRadioButton();
        lblID = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtmaNV = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnADD = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnMoveLast = new javax.swing.JButton();
        btnMoveNext = new javax.swing.JButton();
        btnMovePrevious = new javax.swing.JButton();
        btnMoveFirst = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CA LÀM");

        tblCaLam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Buổi", "Mã Nhân viên", "Họ tên"
            }
        ));
        tblCaLam.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblCaLamAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblCaLam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCaLamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCaLam);

        jLabel2.setText("ID:");

        jLabel3.setText("Buổi:");

        jLabel4.setText("Mã nhân viên:");

        jLabel5.setText("Họ tên:");

        buttonGroup1.add(rdoCa1);
        rdoCa1.setText("Sáng");

        buttonGroup1.add(rdoCa2);
        rdoCa2.setText("Chiều");

        buttonGroup1.add(rdoCa3);
        rdoCa3.setText("Tối");

        lblID.setText("1");

        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/clear.png"))); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.setPreferredSize(new java.awt.Dimension(72, 7));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnADD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/insert.png"))); // NOI18N
        btnADD.setText("ADD");
        btnADD.setPreferredSize(new java.awt.Dimension(72, 7));
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/update.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.setPreferredSize(new java.awt.Dimension(72, 7));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/delete.png"))); // NOI18N
        btnDel.setText("DELETE");
        btnDel.setPreferredSize(new java.awt.Dimension(72, 7));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnRead.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRead.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/read.png"))); // NOI18N
        btnRead.setText("READ");
        btnRead.setPreferredSize(new java.awt.Dimension(72, 7));
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnMoveLast.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMoveLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/cuoi.png"))); // NOI18N
        btnMoveLast.setText("CUỐI");
        btnMoveLast.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMoveLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveLastActionPerformed(evt);
            }
        });

        btnMoveNext.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMoveNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/tien.png"))); // NOI18N
        btnMoveNext.setText("TIẾN");
        btnMoveNext.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMoveNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveNextActionPerformed(evt);
            }
        });

        btnMovePrevious.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMovePrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/lui.png"))); // NOI18N
        btnMovePrevious.setText("LÙI");
        btnMovePrevious.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMovePrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovePreviousActionPerformed(evt);
            }
        });

        btnMoveFirst.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMoveFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/dau.png"))); // NOI18N
        btnMoveFirst.setText("ĐẦU");
        btnMoveFirst.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMoveFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveFirstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblID)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(rdoCa1)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoCa2)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoCa3))
                                            .addComponent(txtmaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 410, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMoveFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMovePrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveNext, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveLast, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnADD, btnClear, btnDel, btnRead, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMoveFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMovePrevious, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoveNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoveLast, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblID)
                        .addComponent(jLabel3)
                        .addComponent(rdoCa1)
                        .addComponent(rdoCa2)
                        .addComponent(rdoCa3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtmaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblCaLamAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblCaLamAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCaLamAncestorAdded

    private void tblCaLamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCaLamMouseClicked
        // TODO add your handling code here:
        edit();
    }//GEN-LAST:event_tblCaLamMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
        XDialog.alert("Đã xóa toàn bộ nội dung");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
        if(checkAll()){
            create();
        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(checkAll()){
            update();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        if(checkAll()){
            delete();
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        // TODO add your handling code here:
        fillToTable();
        XDialog.alert("Đã load lại dữ liệu");
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnMoveLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveLastActionPerformed
        // TODO add your handling code here:
        moveLast();
    }//GEN-LAST:event_btnMoveLastActionPerformed

    private void btnMoveNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveNextActionPerformed
        // TODO add your handling code here:
        moveNext();
    }//GEN-LAST:event_btnMoveNextActionPerformed

    private void btnMovePreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovePreviousActionPerformed
        // TODO add your handling code here:
        movePrevious();
    }//GEN-LAST:event_btnMovePreviousActionPerformed

    private void btnMoveFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveFirstActionPerformed
        // TODO add your handling code here:
        moveFirst();
    }//GEN-LAST:event_btnMoveFirstActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnMoveFirst;
    private javax.swing.JButton btnMoveLast;
    private javax.swing.JButton btnMoveNext;
    private javax.swing.JButton btnMovePrevious;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblID;
    private javax.swing.JRadioButton rdoCa1;
    private javax.swing.JRadioButton rdoCa2;
    private javax.swing.JRadioButton rdoCa3;
    private javax.swing.JTable tblCaLam;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtmaNV;
    // End of variables declaration//GEN-END:variables
    public void setQuyen() {
    if (XAuth.isViewer()) {
        // Phục vụ không được quyền gì
        btnADD.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        btnRead.setEnabled(true);
    } else if (XAuth.isStaff()) {
        // Nhân viên không được thêm/sửa/xóa nhân viên
        btnADD.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        btnRead.setEnabled(true);
    }else if (XAuth.isManager()) {
        // Nhân viên không được thêm/sửa/xóa nhân viên
        btnADD.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnDel.setEnabled(true);
        btnRead.setEnabled(true);
    }
    // Quản lý thì không cần giới hạn
}
    @Override
    public void open() {
    }

    @Override
    public void setForm(CaLam entity) {
        txtmaNV.setText(entity.getMaNV());
        if (entity.getBuoi()== null) {
            // Không chọn gì
            rdoCa1.setSelected(false);
            rdoCa2.setSelected(false);
            rdoCa3.setSelected(false);
        } else {
            switch (entity.getBuoi()) {
                case "Sáng":
                    rdoCa1.setSelected(true);
                    break;
                case "Chiều":
                    rdoCa2.setSelected(true);
                    break;
                case "Tối":
                    rdoCa3.setSelected(true);
                    break;
                default:
                    // Không chọn radio button nào nếu giá trị lạ
                    rdoCa1.setSelected(false);
                    rdoCa2.setSelected(false);
                    rdoCa3.setSelected(false);
            }
        }
        txtHoTen.setText(entity.getHoTen());
        lblID.setText(String.valueOf(entity.getID()));
    }

    @Override
    public CaLam getForm() {
        CaLam entity = new CaLam();
        entity.setHoTen(txtHoTen.getText());
        if (rdoCa1.isSelected()) {
            entity.setBuoi("Sáng");
        } else if (rdoCa2.isSelected()) {
            entity.setBuoi("Chiều");
        } else if (rdoCa3.isSelected()) {
            entity.setBuoi("Tối");
        } else {
            entity.setBuoi(null);  // Không chọn chức vụ
        }
        entity.setMaNV(txtmaNV.getText());
        entity.setID(Integer.parseInt(lblID.getText()));
        return entity;
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblCaLam.getModel();
        // Xóa toàn bộ dữ liệu cũ trong bảng
        model.setRowCount(0);
        // Lấy danh sách các ca làm từ DAO
        items = dao.findAll();
        // Duyệt qua danh sách và thêm từng dòng vào bảng
                items.forEach(item -> {
            Object[] rowData = {
                item.getBuoi(),
                item.getMaNV(),
                item.getHoTen(),
                false
            };
            model.addRow(rowData);
        });
        }

    @Override
    public void edit() {
        CaLam entity = items.get(tblCaLam.getSelectedRow());
        this.setForm(entity);
    }

    @Override
    public void create() {
        if (XDialog.confirm("Bạn thực sự muốn thêm nhân viên này?")) {
        CaLam entity = this.getForm();
        dao.create(entity);
        this.fillToTable();
        this.clear();
        XDialog.alert("Đã thêm thành công");
        }
    }

    @Override
    public void update() {
        if (XDialog.confirm("Bạn thực sự muốn thêm nhân viên này?")) {
        CaLam entity = this.getForm();
        dao.update(entity);
        this.fillToTable();
        this.clear();
        XDialog.alert("Đã cập nhật thành công");
    }
    }

    @Override
    public void delete() {
        if (XDialog.confirm("Bạn thực sự muốn xóa?")) {
         String id = txtmaNV.getText(); // "Ca1", "Ca2", hoặc "Ca3"
         dao.deleteById(id);
         this.fillToTable();
         this.clear();
         XDialog.alert("Đã xóa thành công");
     }
    }

    @Override
    public void clear() {
        this.setForm(new CaLam());
        this.setEditable(false);
    }

    @Override
    public void setEditable(boolean editable) {
       
    }


    @Override
    public boolean checkAll() {

    if (txtHoTen.getText()==null) {
        XDialog.alert( "Vui lòng nhập họ tên.");
        return false;
    }
    
    if(txtmaNV.getText()==null){
        XDialog.alert("Chưa nhập mã nhân viên");
        return false;
    }
    
    if (!rdoCa1.isSelected() && !rdoCa2.isSelected() && !rdoCa3.isSelected()) {
        XDialog.alert("Vui lòng chọn ca làm.");
        return false;
    }
    return true;
    }

    @Override
    public void uncheckAll() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void deleteCheckedItems() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void moveFirst() {
        int currentIndex = tblCaLam.getSelectedRow();
        if (currentIndex == 0) {
            XDialog.alert( "Đã ở vị trí đầu tiên rồi!");
        } else {
            this.moveTo(0);
        }
    }

    @Override
    public void movePrevious() {
        this.moveTo(tblCaLam.getSelectedRow() - 1);
    }

    @Override
    public void moveNext() {
    this.moveTo(tblCaLam.getSelectedRow() + 1);
    }

    @Override
    public void moveLast() {
        this.moveTo(tblCaLam.getRowCount() - 1);
    }

    @Override
    public void moveTo(int index) {
         if (index < 0) {
        this.moveLast();
    } else if (index >= tblCaLam.getRowCount()) {
        this.moveFirst();
    } else {
        tblCaLam.clearSelection();
        tblCaLam.setRowSelectionInterval(index, index);
        this.edit();
    }
    }
}
