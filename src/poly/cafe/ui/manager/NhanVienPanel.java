/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cafe.ui.manager;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import poly.cafe.controller.entityController.NhanVienCTR;
import poly.cafe.dao.entityDAO.NhanVienDAO;
import poly.cafe.dao.impl.NhanVienimpl;
import poly.cafe.entity.NhanVien;
import poly.cafe.util.XAuth;
import poly.cafe.util.XDialog;

/**
 *
 * @author baoha
 */
public class NhanVienPanel extends javax.swing.JPanel implements NhanVienCTR {
    
    NhanVienDAO dao = new NhanVienimpl();
    List<NhanVien> items = new ArrayList<>();
 
    /**
     * Creates new form NhanVienPanel
     */
    public NhanVienPanel(boolean visible) {
        initComponents();
        setQuyen();
        setButtonVisible(visible);
    }
    public void setButtonVisible(boolean visible) {
    jButton1.setVisible(visible);
}
    public void fillToTableTheoDieuKien() {
try {
    NhanVienimpl dao = new NhanVienimpl();
    String keyword = txtFind.getText().trim();

    List<NhanVien> list = dao.findByKeyword(keyword);

    DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
    model.setRowCount(0);

    if (list.isEmpty()) {
        XDialog.alert("Không tìm thấy nhân viên nào.");
        return;
    }

    for (NhanVien item : list) {
        Object[] row = {
            item.getMaNV(),
            item.getHoTen(),
            item.getNamSinh(),
            item.getSdt(),
            item.getEmail(),
            item.getChucVu(),
            false
        };
        model.addRow(row);
    }

} catch (Exception e) {
}
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        role = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        btnADD = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        rdoPhucVu = new javax.swing.JRadioButton();
        txtSDT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblManv = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rdoQuanLy = new javax.swing.JRadioButton();
        date = new com.toedter.calendar.JDateChooser();
        rdoNhanVien = new javax.swing.JRadioButton();
        txtHoten = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        btnfind = new javax.swing.JButton();
        btnMoveFirst = new javax.swing.JButton();
        btnMovePrevious = new javax.swing.JButton();
        btnMoveNext = new javax.swing.JButton();
        btnMoveLast = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setContentAreaFilled(false);
        jButton1.setEnabled(false);
        jButton1.setFocusable(false);
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 819, 480));

        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setVerifyInputWhenFocusTarget(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NHÂN VIÊN");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-120, 20, 1259, 36));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setEnabled(false);
        jScrollPane1.setFocusable(false);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setOpaque(false);
        jScrollPane1.setRequestFocusEnabled(false);
        jScrollPane1.setRowHeaderView(null);
        jScrollPane1.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setWheelScrollingEnabled(false);

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Năm sinh", "Số điện thoại", "Email", "Chức vụ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.setAutoscrolls(false);
        tblNhanVien.getTableHeader().setResizingAllowed(false);
        tblNhanVien.getTableHeader().setReorderingAllowed(false);
        tblNhanVien.setVerifyInputWhenFocusTarget(false);
        tblNhanVien.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblNhanVienAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);
        if (tblNhanVien.getColumnModel().getColumnCount() > 0) {
            tblNhanVien.getColumnModel().getColumn(0).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(1).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(2).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(3).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(4).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 106, 1090, 131));

        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/clear.png"))); // NOI18N
        btnClear.setText("Làm mới");
        btnClear.setPreferredSize(new java.awt.Dimension(72, 7));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 73, 119, 27));

        btnADD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/insert.png"))); // NOI18N
        btnADD.setText("Thêm");
        btnADD.setHideActionText(true);
        btnADD.setPreferredSize(new java.awt.Dimension(72, 7));
        btnADD.setRequestFocusEnabled(false);
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });
        jPanel1.add(btnADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 73, 119, 27));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/update.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.setPreferredSize(new java.awt.Dimension(72, 7));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 73, 119, 27));

        btnDel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/delete.png"))); // NOI18N
        btnDel.setText("Xóa");
        btnDel.setPreferredSize(new java.awt.Dimension(72, 7));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel1.add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 73, 119, 27));

        btnRead.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRead.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/read.png"))); // NOI18N
        btnRead.setText("Đọc");
        btnRead.setPreferredSize(new java.awt.Dimension(72, 7));
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });
        jPanel1.add(btnRead, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 73, 119, 27));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        role.add(rdoPhucVu);
        rdoPhucVu.setText("Phục vụ");
        add(rdoPhucVu, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 485, 98, -1));
        add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 400, 300, -1));

        jLabel2.setText("Họ tên nhân viên: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        lblManv.setText("Mã nhân viên");
        add(lblManv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 71, -1));

        jLabel3.setText("Năm sinh:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 59, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 445, 300, -1));

        jLabel4.setText("Mã nhân viên:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jLabel5.setText("Số điện thoại:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        jLabel6.setText("Email:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 37, -1));

        jLabel8.setText("Chức vụ:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 58, -1));

        role.add(rdoQuanLy);
        rdoQuanLy.setText("Quản lý");
        rdoQuanLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoQuanLyActionPerformed(evt);
            }
        });
        add(rdoQuanLy, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 485, -1, -1));

        date.setLocale(new java.util.Locale("vi", "VN"));
        date.setDateFormatString("yyyy-MM-dd");
        date.setMinSelectableDate(new java.util.Date(-62135791103000L));
        add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 353, 297, -1));

        role.add(rdoNhanVien);
        rdoNhanVien.setText("Nhân viên");
        add(rdoNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 485, 98, -1));

        txtHoten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHotenActionPerformed(evt);
            }
        });
        add(txtHoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 319, 297, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Tìm mã nhân viên");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));
        add(txtFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 250, 232, -1));

        btnfind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/find.png"))); // NOI18N
        btnfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfindActionPerformed(evt);
            }
        });
        add(btnfind, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 250, -1, 28));

        btnMoveFirst.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMoveFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/dau.png"))); // NOI18N
        btnMoveFirst.setText("Trang đầu");
        btnMoveFirst.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMoveFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveFirstActionPerformed(evt);
            }
        });
        add(btnMoveFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 250, 130, -1));

        btnMovePrevious.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMovePrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/lui.png"))); // NOI18N
        btnMovePrevious.setText("Trước");
        btnMovePrevious.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMovePrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovePreviousActionPerformed(evt);
            }
        });
        add(btnMovePrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 100, -1));

        btnMoveNext.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMoveNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/tien.png"))); // NOI18N
        btnMoveNext.setText("Tiếp");
        btnMoveNext.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMoveNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveNextActionPerformed(evt);
            }
        });
        add(btnMoveNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 91, -1));

        btnMoveLast.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMoveLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/cafe/icons/cuoi.png"))); // NOI18N
        btnMoveLast.setText("Trang cuối");
        btnMoveLast.setPreferredSize(new java.awt.Dimension(72, 21));
        btnMoveLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveLastActionPerformed(evt);
            }
        });
        add(btnMoveLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 130, 23));
    }// </editor-fold>//GEN-END:initComponents

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        // TODO add your handling code here:
        
        edit();
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void rdoQuanLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoQuanLyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoQuanLyActionPerformed

    private void txtHotenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHotenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHotenActionPerformed

    private void tblNhanVienAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblNhanVienAncestorAdded
        // TODO add your handling code here:
        tblNhanVien.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{"Mã nhân viên", "Họ tên", "Năm sinh", "Số điện thoại", "Email", "Chức vụ"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        fillToTable();
    }//GEN-LAST:event_tblNhanVienAncestorAdded

    private void btnfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfindActionPerformed
        // TODO add your handling code here:
      
        fillToTableTheoDieuKien();
        moveFirst();
        
    }//GEN-LAST:event_btnfindActionPerformed

    private void btnMoveFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveFirstActionPerformed
        // TODO add your handling code here:
        moveFirst();
    }//GEN-LAST:event_btnMoveFirstActionPerformed

    private void btnMovePreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovePreviousActionPerformed
        // TODO add your handling code here:
        movePrevious();
    }//GEN-LAST:event_btnMovePreviousActionPerformed

    private void btnMoveNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveNextActionPerformed
        // TODO add your handling code here:
        moveNext();
    }//GEN-LAST:event_btnMoveNextActionPerformed

    private void btnMoveLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveLastActionPerformed
        // TODO add your handling code here:
        moveLast();
    }//GEN-LAST:event_btnMoveLastActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
        XDialog.alert("Đã xóa toàn bộ nội dung");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
        if(checkAll()){
            create();
        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(checkAll()){
            update();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        if(checkAll()){
            delete();
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        // TODO add your handling code here:
        fillToTable();
        XDialog.alert("Đã load lại dữ liệu");
    }//GEN-LAST:event_btnReadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnMoveFirst;
    private javax.swing.JButton btnMoveLast;
    private javax.swing.JButton btnMoveNext;
    private javax.swing.JButton btnMovePrevious;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnfind;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblManv;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoPhucVu;
    private javax.swing.JRadioButton rdoQuanLy;
    private javax.swing.ButtonGroup role;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables

    @Override
    public void open() {
    }

    @Override
    public void setForm(NhanVien entity) {
        lblManv.setText(entity.getMaNV());
        txtHoten.setText(entity.getHoTen());
        txtEmail.setText(entity.getEmail());
        txtSDT.setText(entity.getSdt());
        date.setDate(entity.getNamSinh());
        if (entity.getChucVu() == null) {
            // Không chọn gì
            rdoQuanLy.setSelected(false);
            rdoNhanVien.setSelected(false);
            rdoPhucVu.setSelected(false);
        } else {
            switch (entity.getChucVu()) {
                case "Quản lý":
                    rdoQuanLy.setSelected(true);
                    break;
                case "Nhân viên":
                    rdoNhanVien.setSelected(true);
                    break;
                case "Phục vụ":
                    rdoPhucVu.setSelected(true);
                    break;
                default:
                    // Không chọn radio button nào nếu giá trị lạ
                    rdoQuanLy.setSelected(false);
                    rdoNhanVien.setSelected(false);
                    rdoPhucVu.setSelected(false);
            }
        }
    }

    @Override
    public NhanVien getForm() {
        NhanVien entity = new NhanVien();
        entity.setMaNV(lblManv.getText());
        entity.setHoTen(txtHoten.getText());
        entity.setEmail(txtEmail.getText());
        entity.setSdt(txtSDT.getText());
        entity.setNamSinh(date.getDate());  // date là JDateChooser

        // Lấy chức vụ từ radio button
        if (rdoQuanLy.isSelected()) {
            entity.setChucVu("Quản lý");
        } else if (rdoNhanVien.isSelected()) {
            entity.setChucVu("Nhân viên");
        } else if (rdoPhucVu.isSelected()) {
            entity.setChucVu("Phục vụ");
        } else {
            entity.setChucVu(null);  // Không chọn chức vụ
        }
        return entity;
    }

    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        items = dao.findAll();
        items.forEach(item -> {
            Object[] rowData = {
                item.getMaNV(),
                item.getHoTen(),
                item.getNamSinh(),
                item.getSdt(),
                item.getEmail(),
                item.getChucVu(),
                false
            };
            model.addRow(rowData);
        });
        
    }

    @Override
    public void edit() {
        NhanVien entity = items.get(tblNhanVien.getSelectedRow());
        this.setForm(entity);
        this.setEditable(true);
    }

    @Override
    public void create() {
        
        if (XDialog.confirm("Bạn thực sự muốn thêm nhân viên này?")) {
        NhanVien entity = this.getForm();
        dao.create(entity);
        this.fillToTable();
        this.clear();
    }
    }

    @Override
    public void update() {
        if (XDialog.confirm("Bạn thực sự muốn cập nhật nhân viên này?")) {
        NhanVien entity = this.getForm();
        dao.update(entity);
        this.fillToTable();
        this.clear();
        XDialog.alert("Đã cập nhật thành công");

    }
    }

    @Override
    public void delete() {
        if (XDialog.confirm("Bạn thực sự muốn xóa?")) {
        String id = lblManv.getText();
        dao.deleteById(id);
        this.fillToTable();
        this.clear();
         XDialog.alert("Đã xóa thành công!");

    }

    }

    @Override
    public void clear() {
        this.setForm(new NhanVien());
            
    }
    public void on(){
        btnADD.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnDel.setEnabled(true);
            btnMoveFirst.setEnabled(true);
            btnMovePrevious.setEnabled(true);
            btnMoveNext.setEnabled(true);
            btnMoveLast.setEnabled(true);
    }
    @Override
    public void setEditable(boolean editable) {

    }
public void setQuyen() {
    if (XAuth.isViewer()) {
        // Phục vụ không được quyền gì
        btnADD.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        btnRead.setEnabled(true);
    } else if (XAuth.isStaff()) {
        // Nhân viên không được thêm/sửa/xóa nhân viên
        btnADD.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        btnRead.setEnabled(true);
    }else if (XAuth.isManager()) {
        // Nhân viên không được thêm/sửa/xóa nhân viên
        btnADD.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnDel.setEnabled(true);
        btnRead.setEnabled(true);
    }
    // Quản lý thì không cần giới hạn
}
    @Override
    public boolean checkAll() {
         if (txtHoten.getText().trim().isEmpty()) {
        XDialog.alert("Vui lòng nhập họ tên.");
        return false;
    }

    if (txtEmail.getText().trim().isEmpty()) {
        XDialog.alert( "Vui lòng nhập email.");
        return false;
    }

    if (txtSDT.getText().trim().isEmpty()) {
        XDialog.alert("Vui lòng nhập số điện thoại.");
        return false;
    }

    if (date.getDate() == null) {
        XDialog.alert("Vui lòng chọn ngày sinh.");
        return false;
    }

    if (!rdoQuanLy.isSelected() && !rdoNhanVien.isSelected() && !rdoPhucVu.isSelected()) {
        XDialog.alert("Vui lòng chọn chức vụ.");
        return false;
    }
    return true;
    }

    @Override
    public void uncheckAll() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void deleteCheckedItems() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void moveFirst() {
            int currentIndex = tblNhanVien.getSelectedRow();
    if (currentIndex == 0) {
        XDialog.alert( "Đã ở vị trí đầu tiên rồi!");
    } else {
        this.moveTo(0);
    }
    }

    @Override
    public void movePrevious() {
        this.moveTo(tblNhanVien.getSelectedRow() - 1);
    }

    @Override
    public void moveNext() {
    this.moveTo(tblNhanVien.getSelectedRow() + 1);
    }

    @Override
    public void moveLast() {
        this.moveTo(tblNhanVien.getRowCount() - 1);
    }

    @Override
    public void moveTo(int index) {
         if (index < 0) {
        this.moveLast();
    } else if (index >= tblNhanVien.getRowCount()) {
        this.moveFirst();
    } else {
        tblNhanVien.clearSelection();
        tblNhanVien.setRowSelectionInterval(index, index);
        this.edit();
    }
    }
}
